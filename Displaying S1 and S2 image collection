// This is a script to display Sentinel-1 and Sentinel-2 images over the same study area
//Sentinel-1 collection is filteres by metadata properties (dual polarisation bands, modes, ascending and descending orbits)
//Google developers document was referred to write the Sentinel-1 script

//get GEE script path here: https://code.earthengine.google.com/75a4caf08b39ad69d55202fe5e87852c


// Import geoemtry or draw geometry polygons in the code editor

//------------Load the Sentinel-1 ImageCollection, filter to Aug 2020 observations--------------------
var sentinel1 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-08-01', '2022-08-20')
                    .filterBounds(geometry);

//------------Load the Sentinel-2 image collection, filter to Jun-Sep 2020 observations----------------
var sentinel2 = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED")
                .filterDate('2022-08-21','2022-09-20')
                .filterBounds(geometry)
                .mean();
               
//-------------Filter the Sentinel-1 collection by metadata properties------------------------------
var vvVhIw = sentinel1
  //** Filter to get images with VV and VH dual polarization.
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
  //** Filter to get images collected in interferometric wide swath mode.
  .filter(ee.Filter.eq('instrumentMode', 'IW'));

//**Separate ascending and descending orbit images into distinct collections.
var vvVhIwAsc = vvVhIw.filter(
  ee.Filter.eq('orbitProperties_pass', 'ASCENDING'));
var vvVhIwDesc = vvVhIw.filter(
  ee.Filter.eq('orbitProperties_pass', 'DESCENDING'));

//-------------Calculate temporal means for various observations to use for visualization-----------
//** Mean VH ascending
var vhIwAscMean = vvVhIwAsc.select('VH').mean();
// ** Mean VH descending
var vhIwDescMean = vvVhIwDesc.select('VH').mean();
// ** Mean VV ascending
var vvIwAscMean = vvVhIwAsc.select('VV').mean();
//** Mean VV for combined ascending and descending image collections
var vvIwAscDescMean = vvVhIwAsc.merge(vvVhIwDesc).select('VV').mean();
//** Mean VH for combined ascending and descending image collections.
var vhIwAscDescMean = vvVhIwAsc.merge(vvVhIwDesc).select('VH').mean();

//------------- Display the temporal means for various observations, compare them-------------
//Comment the ones you do not want to display in the previous section. You can choose to display any layer you prefer

Map.addLayer(vvIwAscDescMean.clip(geometry), {min: -12, max: -4}, 'vvIwAscDescMean');
Map.addLayer(vhIwAscDescMean.clip(geometry), {min: -18, max: -10}, 'vhIwAscDescMean');
Map.addLayer(vhIwAscMean.clip(geometry), {min: -20, max: -10}, 'vhIwAscMean');
Map.addLayer(vvIwAscMean.clip(geometry), {min: -18, max: -1}, 'vvIwAscMean');

//-------------Filter parameters for Sentinel-2 image collection-------------------------
var sentbands = sentinel2.select(['B4', 'B3', 'B2']);
                
var visualization = {
  min: 1000,
  max: 5000,
  bands: ['B4', 'B3', 'B2'],
}; 

Map.addLayer(sentbands, visualization, 'RGB');  
Map.centerObject(geometry, 9);

//print(vhIwAscMean);
//print(sentbands);


//---------------Export image to drive-----------------------------
//Export Sentinel-2 images
Export.image.toDrive({
  image: sentbands,
  description: 'sentinel2',
  scale: 10,
  fileFormat: 'GeoTIFF',
  maxPixels:1e13,
  region: geometry
});


//Export Sentinel-1 images
Export.image.toDrive({
  image: vhIwAscMean,
  description: 'sentinel1',
  scale: 10,
  fileFormat: 'GeoTIFF',
  maxPixels:1e13,
  region: geometry
});

