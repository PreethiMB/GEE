//This is a script to acquire Landsat-8 Surface Reflectance images, process them and generate Normalized Difference vegetation Index (NDVI) 
//and Normalized Difference Water Index (NDWI) and export the collection to Google Drive

//--------Get Landsat-8 image, filter dates, path, row and months bound to geometry-----
//First step - import geometry or define a variable and assign geometry by providing bounding box.
//In this script, a shapefile was imported into GEE code editor and used as geometry variable

var visTrueColor = {bands: ["SR_B4","SR_B3","SR_B2"], max:25000, min:5000} 
var start = '2019-03-01';
var end = '2019-07-31'; 
var SWMA_ID = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
    .filterMetadata('WRS_ROW', 'equals', 30)
.filterMetadata('WRS_PATH', 'equals', 39)
  .filterDate(start, end)
  .filter(ee.Filter.calendarRange(3,7,'month'))
  .filterBounds(geometry); 
  Map.addLayer(SWMA_ID,visTrueColor,"StudyArea")
  print(SWMA_ID)
Map.addLayer(geometry, {color: 'FF0000'}, 'geodesic polygon');

//--------------------Create a function to mask clouds and shadow---------------------
//**This step is optional 

 function maskL8sr(imagecollection){
  var cloudshadowBitMask = 1 << 4;
  var cloudBitMask = 1 << 3;
  
  //Get the QA_PIXEL band 
  var qa = imagecollection.select('QA_PIXEL')
  
  //Mask the bits - both flags should be set to zero indicating clear conditions
  var mask = qa.bitwiseAnd(cloudshadowBitMask).eq(0)
            .and(qa.bitwiseAnd(cloudBitMask).eq(0));
  return imagecollection.updateMask(mask)
        .select("SR_B[0-7]*")
        .copyProperties(imagecollection, ["system:time_start"]);
         
}

//-----------Apply the mask to the image collection--------------------
var swma = SWMA_ID.map(maskL8sr);
Map.addLayer(swma,visTrueColor,"masked");
var studyarea = ee.ImageCollection(swma).toList(999); // create list of images collected in series
var studyarea_first = ee.Image(ee.List(studyarea).get(2)); //pull individual image to variable, note index 0 is the first image Map.addLayer(sterlingWMA_first,visTrueColor,"Sterling_singleImage") //print single image to map print('single image',sterlingWMA_first) // single image info

Map.addLayer(studyarea_first, visTrueColor, "SA_singleimage");
print('single image', studyarea_first);


//--------------Create function for NDVI------------------------------------------------------


var addNDVI = function(image) {
  var ndvi = image.normalizedDifference(['SR_B5', 'SR_B4']).rename('NDVI');
  return image.addBands(ndvi);
};



//--------------Create function for NDWI--------------------------------------------------------

var addNDWI = function(image) {
  var ndwi = image.normalizedDifference(['SR_B3', 'SR_B5']).rename('NDWI');
  return image.addBands(ndwi);
};


//-----------------Add the functions to the image collection-----------------------------------
//In this script the indices function has been applied to the original landsat8 image collection. Masking is skipped here

var withindices = SWMA_ID.map(addNDVI).map(addNDWI);
print(withindices);

var ndviimage = withindices.select('NDVI');
print(ndviimage,'NDVIImage');
var NDVIVisParams = {min: -1, max: 1, palette: ['blue', 'white', 'green']};
Map.addLayer(ndviimage, NDVIVisParams, 'NDVI Image');

var ndwiimage = withindices.select('NDWI');
print(ndwiimage, 'NDWIImage');
var NDWIVisParams = {min: -1, max: 1, palette: ['blue', 'white', 'green']};
Map.addLayer(ndwiimage, NDWIVisParams, 'NDWI Image');

//-----------------Export image collection-----------------------------------------------

var output_folder_ndvi = 'gee_export_ndvi';
var output_folder_ndwi = 'gee_export_ndwi';

// Export NDVI collection image to Drive
 var batch = require('users/fitoprincipe/geetools:batch')
 batch.Download.ImageCollection.toDrive(
   ndviimage,
   output_folder_ndvi,
   {
     name: '{id}_ndvi', // {id}, {system_date} and all other properties (e.g., {WRS_PATH})
      dateFormat: 'yyyy-MM-dd', // Default
     scale: 30,
     maxPixels: 1e13,
     region: geometry, 
     type: 'float' // 'float', 'byte', 'int', 'double', 'long', 'short', 'int8',
                   // 'int16', 'int32', 'int64', 'uint8', 'uint16', 'uint32'
   }
 );


 // Export NDWI collection image to Drive
 var batch = require('users/fitoprincipe/geetools:batch')
 batch.Download.ImageCollection.toDrive(
   ndwiimage,
   output_folder_ndwi,
   {
     name: '{id}_ndwi', // {id}, {system_date} and all other properties (e.g., {WRS_PATH})
      dateFormat: 'yyyy-MM-dd', // Default
     scale: 30,
     maxPixels: 1e13,
     region: geometry, // rmnp_boundary,
     type: 'float' // 'float', 'byte', 'int', 'double', 'long', 'short', 'int8',
                   // 'int16', 'int32', 'int64', 'uint8', 'uint16', 'uint32'
   }
 );




